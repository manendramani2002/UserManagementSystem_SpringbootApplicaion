package com.example.demo.Controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.Entity.LoginRequest;
import com.example.demo.Entity.LoginResponse;
import com.example.demo.Entity.RegisterDto;
import com.example.demo.Entity.User;
import com.example.demo.Entity.UserDto;
import com.example.demo.Repository.UserRepository;
import com.example.demo.Service.UserService;
import com.example.demo.Utils.JwtUtils;


@RestController
@RequestMapping("/user")
public class UserController {
	
	@Autowired
	private UserService ser;
	
	@Autowired
	private JwtUtils utils;
	
	@PostMapping("/register")
	public ResponseEntity<?> register(@RequestBody RegisterDto userdto)
	{
		User  res=ser.register(userdto);
		if(res==null)
			return ResponseEntity.status(400).body("User Present");
			else {
				UserDto dto=new UserDto();
				dto.setName(res.getName());
				dto.setEmail(res.getEmail());
				dto.setId(res.getId());
				return ResponseEntity.status(200).body(dto);
				
			}	
	}
	@PostMapping("/login")
	public ResponseEntity<?> login(@RequestBody LoginRequest logRequest)
	{
		UserDto res=ser.login(logRequest);
		if(res==null)
			return ResponseEntity.ok("user not present");
		String token=utils.generateToken(String.valueOf(res.getId()),res.getEmail(),res.getRole());
		LoginResponse response=new LoginResponse();
		response.setToken(token);
		response.setUserdto(res);
		return ResponseEntity.ok(response);
	}
	@PostMapping("/welcome")
	public String add()
	{
		return "Welcome";
	}
	@PutMapping("/update/{id}")
	public ResponseEntity<?> updatedetails(@RequestBody RegisterDto registerdto,int id)
	{
		User res=ser.updatedetails(registerdto,id);
		return ResponseEntity.ok(res);
	}
	
	@GetMapping("/finduser/{id}")
	public ResponseEntity<?> finduser(@PathVariable int id)
	{
		User res=ser.findUser(id);
		if(res==null)
			return ResponseEntity.status(400).body("User not Present");
		else
		{
			UserDto dto=new UserDto();
			dto.setName(res.getName());
			dto.setEmail(res.getEmail());
			dto.setId(res.getId());
			dto.setRole(res.getRole());
			return ResponseEntity.status(200).body(dto);
		}
	}
}
